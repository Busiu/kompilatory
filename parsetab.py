
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "left=ADDASSIGNSUBASSIGNMULASSIGNDIVASSIGNDOTADDASSIGNDOTSUBASSIGNDOTMULASSIGNDOTDIVASSIGNleft<>EQLEQGEQNEQleft+-DOTADDDOTSUBleft*/DOTMULDOTDIVleftTRANSPOSEADDASSIGN BREAK COMMENT CONTINUE DIVASSIGN DOTADD DOTADDASSIGN DOTDIV DOTDIVASSIGN DOTMUL DOTMULASSIGN DOTSUB DOTSUBASSIGN ELSE EQ EYE FLOAT FOR GEQ ID IF INTEGER LEQ MULASSIGN NEQ ONES PRINT RETURN STRING SUBASSIGN TRANSPOSE WHILE ZEROSprogram : instructionsinstructions : instruction instructions\n                        | instruction\n                        | '{' instructions '}'instruction  : assignment ';'\n                        | conditional\n                        | BREAK ';'\n                        | CONTINUE ';'\n                        | RETURN rvalue ';'\n                        | RETURN ';'\n                        | PRINT '(' prtvalues ')' ';' assignment   : variable '=' rvalue\n                        | variable DOTADDASSIGN rvalue\n                        | variable DOTSUBASSIGN rvalue\n                        | variable DOTMULASSIGN rvalue\n                        | variable DOTDIVASSIGN rvalue\n                        | variable ADDASSIGN rvalue\n                        | variable SUBASSIGN rvalue\n                        | variable MULASSIGN rvalue\n                        | variable DIVASSIGN rvaluevariable : ID\n                    | matrixelemmatrixelem   : ID '[' expr ',' expr ']'conditional  : IF '(' cond ')' block\n                        | IF '(' cond ')' block ELSE block\n                        | FOR '(' forexpr ')' block\n                        | WHILE '(' cond ')' blockcond : expr\n                | IDblock : instruction\n                 | '{' instructions '}' prtvalues    : rvalue ',' prtvalues\n                        | rvaluervalue   : expr\n                    | matrixelem\n                    | STRING\n                    | IDforexpr  : ID '=' exprrows : rowelems ';' rows\n                | rowelemsrowelems : rvalue ',' rowelems\n                    | rvalueexpr : expr '+' expr\n                | expr '-' expr\n                | expr '*' expr\n                | expr '/' expr\n                | expr DOTADD expr\n                | expr DOTSUB expr\n                | expr DOTMUL expr\n                | expr DOTDIV expr\n                | expr EQ expr\n                | expr GEQ expr\n                | expr LEQ expr\n                | expr NEQ expr\n                | expr '>' expr\n                | expr '<' expr\n                | expr ':' expr\n                | '[' rows ']'\n                | '(' expr ')'\n                | ZEROS '(' expr ')'\n                | ONES '(' expr ')'\n                | EYE '(' expr ')'\n                | expr TRANSPOSE\n                | INTEGER\n                | FLOAT\n                | ID"
    
_lr_action_items = {'{':([0,3,4,6,19,20,21,23,50,117,118,120,127,129,130,131,132,134,136,139,140,],[4,4,4,-6,-5,-7,-8,-10,-9,131,131,131,-11,-24,-30,4,-26,-27,131,-25,-31,]),'BREAK':([0,3,4,6,19,20,21,23,50,117,118,120,127,129,130,131,132,134,136,139,140,],[7,7,7,-6,-5,-7,-8,-10,-9,7,7,7,-11,-24,-30,7,-26,-27,7,-25,-31,]),'CONTINUE':([0,3,4,6,19,20,21,23,50,117,118,120,127,129,130,131,132,134,136,139,140,],[8,8,8,-6,-5,-7,-8,-10,-9,8,8,8,-11,-24,-30,8,-26,-27,8,-25,-31,]),'RETURN':([0,3,4,6,19,20,21,23,50,117,118,120,127,129,130,131,132,134,136,139,140,],[9,9,9,-6,-5,-7,-8,-10,-9,9,9,9,-11,-24,-30,9,-26,-27,9,-25,-31,]),'PRINT':([0,3,4,6,19,20,21,23,50,117,118,120,127,129,130,131,132,134,136,139,140,],[10,10,10,-6,-5,-7,-8,-10,-9,10,10,10,-11,-24,-30,10,-26,-27,10,-25,-31,]),'IF':([0,3,4,6,19,20,21,23,50,117,118,120,127,129,130,131,132,134,136,139,140,],[12,12,12,-6,-5,-7,-8,-10,-9,12,12,12,-11,-24,-30,12,-26,-27,12,-25,-31,]),'FOR':([0,3,4,6,19,20,21,23,50,117,118,120,127,129,130,131,132,134,136,139,140,],[13,13,13,-6,-5,-7,-8,-10,-9,13,13,13,-11,-24,-30,13,-26,-27,13,-25,-31,]),'WHILE':([0,3,4,6,19,20,21,23,50,117,118,120,127,129,130,131,132,134,136,139,140,],[14,14,14,-6,-5,-7,-8,-10,-9,14,14,14,-11,-24,-30,14,-26,-27,14,-25,-31,]),'ID':([0,3,4,6,9,19,20,21,23,28,29,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,72,73,74,109,110,116,117,118,119,120,121,127,129,130,131,132,134,136,139,140,],[15,15,15,-6,27,-5,-7,-8,-10,27,71,27,27,27,27,27,27,27,27,27,27,88,90,88,71,-9,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,27,27,27,15,15,71,15,71,-11,-24,-30,15,-26,-27,15,-25,-31,]),'$end':([1,2,3,6,17,19,20,21,23,49,50,127,129,130,132,134,139,140,],[0,-1,-3,-6,-2,-5,-7,-8,-10,-4,-9,-11,-24,-30,-26,-27,-25,-31,]),'}':([3,6,17,18,19,20,21,23,49,50,127,129,130,132,134,137,139,140,],[-3,-6,-2,49,-5,-7,-8,-10,-4,-9,-11,-24,-30,-26,-27,140,-25,-31,]),';':([5,7,8,9,22,24,25,26,27,33,34,66,68,69,71,77,78,79,80,81,82,83,84,85,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,111,115,123,124,125,126,138,],[19,20,21,23,50,-34,-35,-36,-37,-64,-65,-63,109,-42,-66,-12,-13,-14,-15,-16,-17,-18,-19,-20,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,127,-41,-60,-61,-62,-23,]),'ELSE':([6,19,20,21,23,50,127,129,130,132,134,139,140,],[-6,-5,-7,-8,-10,-9,-11,136,-30,-26,-27,-25,-31,]),'STRING':([9,28,35,36,37,38,39,40,41,42,43,44,109,110,116,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'[':([9,15,27,28,29,35,36,37,38,39,40,41,42,43,44,45,47,48,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,72,73,74,109,110,116,119,121,],[28,48,48,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'(':([9,10,12,13,14,28,29,30,31,32,35,36,37,38,39,40,41,42,43,44,45,47,48,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,72,73,74,109,110,116,119,121,],[29,35,45,46,47,29,29,72,73,74,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'ZEROS':([9,28,29,35,36,37,38,39,40,41,42,43,44,45,47,48,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,72,73,74,109,110,116,119,121,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'ONES':([9,28,29,35,36,37,38,39,40,41,42,43,44,45,47,48,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,72,73,74,109,110,116,119,121,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'EYE':([9,28,29,35,36,37,38,39,40,41,42,43,44,45,47,48,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,72,73,74,109,110,116,119,121,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'INTEGER':([9,28,29,35,36,37,38,39,40,41,42,43,44,45,47,48,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,72,73,74,109,110,116,119,121,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'FLOAT':([9,28,29,35,36,37,38,39,40,41,42,43,44,45,47,48,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,72,73,74,109,110,116,119,121,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'=':([11,15,16,90,138,],[36,-21,-22,119,-23,]),'DOTADDASSIGN':([11,15,16,138,],[37,-21,-22,-23,]),'DOTSUBASSIGN':([11,15,16,138,],[38,-21,-22,-23,]),'DOTMULASSIGN':([11,15,16,138,],[39,-21,-22,-23,]),'DOTDIVASSIGN':([11,15,16,138,],[40,-21,-22,-23,]),'ADDASSIGN':([11,15,16,138,],[41,-21,-22,-23,]),'SUBASSIGN':([11,15,16,138,],[42,-21,-22,-23,]),'MULASSIGN':([11,15,16,138,],[43,-21,-22,-23,]),'DIVASSIGN':([11,15,16,138,],[44,-21,-22,-23,]),',':([24,25,26,27,33,34,66,69,71,76,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,111,124,125,126,138,],[-34,-35,-36,-37,-64,-65,-63,110,-66,116,121,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-23,]),']':([24,25,26,27,33,34,66,67,68,69,71,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,111,122,123,124,125,126,135,138,],[-34,-35,-36,-37,-64,-65,-63,108,-40,-42,-66,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-39,-41,-60,-61,-62,138,-23,]),')':([24,25,26,27,33,34,66,70,71,75,76,86,87,88,89,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,111,112,113,114,124,125,126,128,133,138,],[-34,-35,-36,-37,-64,-65,-63,111,-66,115,-33,117,-28,-29,118,120,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,124,125,126,-60,-61,-62,-32,-38,-23,]),'+':([24,27,33,34,66,70,71,87,88,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,111,112,113,114,124,125,126,133,135,],[51,-66,-64,-65,-63,51,-66,51,-66,51,-43,-44,-45,-46,-47,-48,-49,-50,51,51,51,51,51,51,51,-58,-59,51,51,51,-60,-61,-62,51,51,]),'-':([24,27,33,34,66,70,71,87,88,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,111,112,113,114,124,125,126,133,135,],[52,-66,-64,-65,-63,52,-66,52,-66,52,-43,-44,-45,-46,-47,-48,-49,-50,52,52,52,52,52,52,52,-58,-59,52,52,52,-60,-61,-62,52,52,]),'*':([24,27,33,34,66,70,71,87,88,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,111,112,113,114,124,125,126,133,135,],[53,-66,-64,-65,-63,53,-66,53,-66,53,53,53,-45,-46,53,53,-49,-50,53,53,53,53,53,53,53,-58,-59,53,53,53,-60,-61,-62,53,53,]),'/':([24,27,33,34,66,70,71,87,88,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,111,112,113,114,124,125,126,133,135,],[54,-66,-64,-65,-63,54,-66,54,-66,54,54,54,-45,-46,54,54,-49,-50,54,54,54,54,54,54,54,-58,-59,54,54,54,-60,-61,-62,54,54,]),'DOTADD':([24,27,33,34,66,70,71,87,88,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,111,112,113,114,124,125,126,133,135,],[55,-66,-64,-65,-63,55,-66,55,-66,55,-43,-44,-45,-46,-47,-48,-49,-50,55,55,55,55,55,55,55,-58,-59,55,55,55,-60,-61,-62,55,55,]),'DOTSUB':([24,27,33,34,66,70,71,87,88,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,111,112,113,114,124,125,126,133,135,],[56,-66,-64,-65,-63,56,-66,56,-66,56,-43,-44,-45,-46,-47,-48,-49,-50,56,56,56,56,56,56,56,-58,-59,56,56,56,-60,-61,-62,56,56,]),'DOTMUL':([24,27,33,34,66,70,71,87,88,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,111,112,113,114,124,125,126,133,135,],[57,-66,-64,-65,-63,57,-66,57,-66,57,57,57,-45,-46,57,57,-49,-50,57,57,57,57,57,57,57,-58,-59,57,57,57,-60,-61,-62,57,57,]),'DOTDIV':([24,27,33,34,66,70,71,87,88,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,111,112,113,114,124,125,126,133,135,],[58,-66,-64,-65,-63,58,-66,58,-66,58,58,58,-45,-46,58,58,-49,-50,58,58,58,58,58,58,58,-58,-59,58,58,58,-60,-61,-62,58,58,]),'EQ':([24,27,33,34,66,70,71,87,88,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,111,112,113,114,124,125,126,133,135,],[59,-66,-64,-65,-63,59,-66,59,-66,59,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,59,-58,-59,59,59,59,-60,-61,-62,59,59,]),'GEQ':([24,27,33,34,66,70,71,87,88,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,111,112,113,114,124,125,126,133,135,],[60,-66,-64,-65,-63,60,-66,60,-66,60,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,60,-58,-59,60,60,60,-60,-61,-62,60,60,]),'LEQ':([24,27,33,34,66,70,71,87,88,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,111,112,113,114,124,125,126,133,135,],[61,-66,-64,-65,-63,61,-66,61,-66,61,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,61,-58,-59,61,61,61,-60,-61,-62,61,61,]),'NEQ':([24,27,33,34,66,70,71,87,88,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,111,112,113,114,124,125,126,133,135,],[62,-66,-64,-65,-63,62,-66,62,-66,62,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,62,-58,-59,62,62,62,-60,-61,-62,62,62,]),'>':([24,27,33,34,66,70,71,87,88,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,111,112,113,114,124,125,126,133,135,],[63,-66,-64,-65,-63,63,-66,63,-66,63,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,63,-58,-59,63,63,63,-60,-61,-62,63,63,]),'<':([24,27,33,34,66,70,71,87,88,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,111,112,113,114,124,125,126,133,135,],[64,-66,-64,-65,-63,64,-66,64,-66,64,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,64,-58,-59,64,64,64,-60,-61,-62,64,64,]),':':([24,27,33,34,66,70,71,87,88,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,111,112,113,114,124,125,126,133,135,],[65,-66,-64,-65,-63,65,-66,65,-66,65,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,65,-58,-59,65,65,65,-60,-61,-62,65,65,]),'TRANSPOSE':([24,27,33,34,66,70,71,87,88,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,111,112,113,114,124,125,126,133,135,],[66,-66,-64,-65,-63,66,-66,66,-66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-58,-59,66,66,66,-60,-61,-62,66,66,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'instructions':([0,3,4,131,],[2,17,18,137,]),'instruction':([0,3,4,117,118,120,131,136,],[3,3,3,130,130,130,3,130,]),'assignment':([0,3,4,117,118,120,131,136,],[5,5,5,5,5,5,5,5,]),'conditional':([0,3,4,117,118,120,131,136,],[6,6,6,6,6,6,6,6,]),'variable':([0,3,4,117,118,120,131,136,],[11,11,11,11,11,11,11,11,]),'matrixelem':([0,3,4,9,28,35,36,37,38,39,40,41,42,43,44,109,110,116,117,118,120,131,136,],[16,16,16,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,16,16,16,16,16,]),'rvalue':([9,28,35,36,37,38,39,40,41,42,43,44,109,110,116,],[22,69,76,77,78,79,80,81,82,83,84,85,69,69,76,]),'expr':([9,28,29,35,36,37,38,39,40,41,42,43,44,45,47,48,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,72,73,74,109,110,116,119,121,],[24,24,70,24,24,24,24,24,24,24,24,24,24,87,87,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,112,113,114,24,24,24,133,135,]),'rows':([28,109,],[67,122,]),'rowelems':([28,109,110,],[68,68,123,]),'prtvalues':([35,116,],[75,128,]),'cond':([45,47,],[86,91,]),'forexpr':([46,],[89,]),'block':([117,118,120,136,],[129,132,134,139,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> instructions','program',1,'p_program','parser2.py',36),
  ('instructions -> instruction instructions','instructions',2,'p_instructions','parser2.py',40),
  ('instructions -> instruction','instructions',1,'p_instructions','parser2.py',41),
  ('instructions -> { instructions }','instructions',3,'p_instructions','parser2.py',42),
  ('instruction -> assignment ;','instruction',2,'p_instruction','parser2.py',52),
  ('instruction -> conditional','instruction',1,'p_instruction','parser2.py',53),
  ('instruction -> BREAK ;','instruction',2,'p_instruction','parser2.py',54),
  ('instruction -> CONTINUE ;','instruction',2,'p_instruction','parser2.py',55),
  ('instruction -> RETURN rvalue ;','instruction',3,'p_instruction','parser2.py',56),
  ('instruction -> RETURN ;','instruction',2,'p_instruction','parser2.py',57),
  ('instruction -> PRINT ( prtvalues ) ;','instruction',5,'p_instruction','parser2.py',58),
  ('assignment -> variable = rvalue','assignment',3,'p_assignment','parser2.py',67),
  ('assignment -> variable DOTADDASSIGN rvalue','assignment',3,'p_assignment','parser2.py',68),
  ('assignment -> variable DOTSUBASSIGN rvalue','assignment',3,'p_assignment','parser2.py',69),
  ('assignment -> variable DOTMULASSIGN rvalue','assignment',3,'p_assignment','parser2.py',70),
  ('assignment -> variable DOTDIVASSIGN rvalue','assignment',3,'p_assignment','parser2.py',71),
  ('assignment -> variable ADDASSIGN rvalue','assignment',3,'p_assignment','parser2.py',72),
  ('assignment -> variable SUBASSIGN rvalue','assignment',3,'p_assignment','parser2.py',73),
  ('assignment -> variable MULASSIGN rvalue','assignment',3,'p_assignment','parser2.py',74),
  ('assignment -> variable DIVASSIGN rvalue','assignment',3,'p_assignment','parser2.py',75),
  ('variable -> ID','variable',1,'p_variable','parser2.py',79),
  ('variable -> matrixelem','variable',1,'p_variable','parser2.py',80),
  ('matrixelem -> ID [ expr , expr ]','matrixelem',6,'p_matrixelem','parser2.py',84),
  ('conditional -> IF ( cond ) block','conditional',5,'p_conditional','parser2.py',88),
  ('conditional -> IF ( cond ) block ELSE block','conditional',7,'p_conditional','parser2.py',89),
  ('conditional -> FOR ( forexpr ) block','conditional',5,'p_conditional','parser2.py',90),
  ('conditional -> WHILE ( cond ) block','conditional',5,'p_conditional','parser2.py',91),
  ('cond -> expr','cond',1,'p_cond','parser2.py',98),
  ('cond -> ID','cond',1,'p_cond','parser2.py',99),
  ('block -> instruction','block',1,'p_block','parser2.py',103),
  ('block -> { instructions }','block',3,'p_block','parser2.py',104),
  ('prtvalues -> rvalue , prtvalues','prtvalues',3,'p_prtvalues','parser2.py',111),
  ('prtvalues -> rvalue','prtvalues',1,'p_prtvalues','parser2.py',112),
  ('rvalue -> expr','rvalue',1,'p_rvalue','parser2.py',119),
  ('rvalue -> matrixelem','rvalue',1,'p_rvalue','parser2.py',120),
  ('rvalue -> STRING','rvalue',1,'p_rvalue','parser2.py',121),
  ('rvalue -> ID','rvalue',1,'p_rvalue','parser2.py',122),
  ('forexpr -> ID = expr','forexpr',3,'p_forexpr','parser2.py',126),
  ('rows -> rowelems ; rows','rows',3,'p_rows','parser2.py',130),
  ('rows -> rowelems','rows',1,'p_rows','parser2.py',131),
  ('rowelems -> rvalue , rowelems','rowelems',3,'p_rowelems','parser2.py',138),
  ('rowelems -> rvalue','rowelems',1,'p_rowelems','parser2.py',139),
  ('expr -> expr + expr','expr',3,'p_expr','parser2.py',146),
  ('expr -> expr - expr','expr',3,'p_expr','parser2.py',147),
  ('expr -> expr * expr','expr',3,'p_expr','parser2.py',148),
  ('expr -> expr / expr','expr',3,'p_expr','parser2.py',149),
  ('expr -> expr DOTADD expr','expr',3,'p_expr','parser2.py',150),
  ('expr -> expr DOTSUB expr','expr',3,'p_expr','parser2.py',151),
  ('expr -> expr DOTMUL expr','expr',3,'p_expr','parser2.py',152),
  ('expr -> expr DOTDIV expr','expr',3,'p_expr','parser2.py',153),
  ('expr -> expr EQ expr','expr',3,'p_expr','parser2.py',154),
  ('expr -> expr GEQ expr','expr',3,'p_expr','parser2.py',155),
  ('expr -> expr LEQ expr','expr',3,'p_expr','parser2.py',156),
  ('expr -> expr NEQ expr','expr',3,'p_expr','parser2.py',157),
  ('expr -> expr > expr','expr',3,'p_expr','parser2.py',158),
  ('expr -> expr < expr','expr',3,'p_expr','parser2.py',159),
  ('expr -> expr : expr','expr',3,'p_expr','parser2.py',160),
  ('expr -> [ rows ]','expr',3,'p_expr','parser2.py',161),
  ('expr -> ( expr )','expr',3,'p_expr','parser2.py',162),
  ('expr -> ZEROS ( expr )','expr',4,'p_expr','parser2.py',163),
  ('expr -> ONES ( expr )','expr',4,'p_expr','parser2.py',164),
  ('expr -> EYE ( expr )','expr',4,'p_expr','parser2.py',165),
  ('expr -> expr TRANSPOSE','expr',2,'p_expr','parser2.py',166),
  ('expr -> INTEGER','expr',1,'p_expr','parser2.py',167),
  ('expr -> FLOAT','expr',1,'p_expr','parser2.py',168),
  ('expr -> ID','expr',1,'p_expr','parser2.py',169),
]
